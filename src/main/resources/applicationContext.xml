<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:component-scan base-package="org.cad.interruptus.rest" />
    <context:component-scan base-package="org.cad.interruptus.core.esper" />

    <context:property-placeholder location="classpath:configuration.properties" />

    <bean id="gsonBuilder" class="com.google.gson.GsonBuilder">
        <property name="dateFormat" value="yyyy-MM-dd HH:mm:ss"/>
    </bean>

    <bean id="gson" class="com.google.gson.Gson" factory-bean="gsonBuilder" factory-method="create"/>

    <bean id="esperConfiguration"   class="com.espertech.esper.client.Configuration" scope="singleton" />

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean" scope="singleton">
        <property name="targetMethod"   value="addImport"/>
        <property name="targetObject"   ref="esperConfiguration"/>
        <property name="arguments"      value="com.espertech.esperio.amqp.*"/>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean" scope="singleton">
        <property name="targetMethod"   value="addImport"/>
        <property name="targetObject"   ref="esperConfiguration"/>
        <property name="arguments"      value="com.espertech.esperio.amqp.*"/>
    </bean>

    <bean id="esperDefaultProvider" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean" scope="singleton">
        <property name="staticMethod"   value="com.espertech.esper.client.EPServiceProviderManager.getDefaultProvider"/>
        <property name="arguments"      ref="esperConfiguration"/>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean" scope="singleton">
        <property name="targetMethod"   value="initialize"/>
        <property name="targetObject"   ref="esperDefaultProvider"/>
    </bean>

    <bean id="esperDefaultProviderAdministrator"
          class="com.espertech.esper.client.EPAdministrator"
          factory-bean="esperDefaultProvider"
          factory-method="getEPAdministrator"
          scope="singleton"/>

    <bean id="esperepEPRuntimeImpl"
          class="com.espertech.esper.core.service.EPRuntimeImpl"
          factory-bean="esperDefaultProvider"
          factory-method="getEPRuntime"
          scope="singleton"/>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean" lazy-init="false" scope="singleton">
        <property name="staticMethod"   value="org.cad.interruptus.AMQPJsonToMap.setEPServiceProvider"/>
        <property name="arguments"      ref="esperDefaultProvider"/>
    </bean>

    <!-- zookeeper configuration -->
    <util:set id="typePathListenersSet">
        <ref bean="typeZookeeperListener"/>
    </util:set>

    <util:set id="flowPathListenersSet">
        <ref bean="flowZookeeperListener"/>
    </util:set>

    <util:set id="statementPathListenersSet">
        <ref bean="statementZookeeperListener"/>
    </util:set>

    <bean id="statementZookeeperListener" class="org.cad.interruptus.repository.zookeeper.listener.StatementZookeeperListener">
        <constructor-arg index="0" value="{zookeeper.configuration.statement.path}" />
        <constructor-arg index="1" ref="typeEntityCache" />
        <constructor-arg index="2" ref="gson" />
        <constructor-arg index="3" ref="statementConfiguration" />
    </bean>

    <bean id="flowZookeeperListener" class="org.cad.interruptus.repository.zookeeper.listener.FlowZookeeperListener">
        <constructor-arg index="0" value="{zookeeper.configuration.flow.path}" />
        <constructor-arg index="1" ref="typeEntityCache" />
        <constructor-arg index="2" ref="gson" />
        <constructor-arg index="3" ref="flowConfiguration" />
    </bean>

    <bean id="typeZookeeperListener" class="org.cad.interruptus.repository.zookeeper.listener.TypeZookeeperListener">
        <constructor-arg index="0" value="{zookeeper.configuration.type.path}" />
        <constructor-arg index="1" ref="typeEntityCache" />
        <constructor-arg index="2" ref="gson" />
        <constructor-arg index="3" ref="typeConfiguration" />
    </bean>

    <bean id="zookeeperLeaderListener" class="org.cad.interruptus.core.zookeeper.ZookeeperLeaderListener"/>

    <util:map id="pathListeners" key-type="java.lang.String" >
        <entry key="${zookeeper.configuration.type.path}"       value-ref="typePathListenersSet"/>
        <entry key="${zookeeper.configuration.flow.path}"       value-ref="flowPathListenersSet"/>
        <entry key="${zookeeper.configuration.statement.path}"  value-ref="statementPathListenersSet"/>
    </util:map>

    <bean id="attachPathListener" class="org.cad.interruptus.core.zookeeper.AttachPathListener">
        <property name="listeners" ref="pathListeners"/>
    </bean>

    <bean id="attachLeaderSelectorListener" class="org.cad.interruptus.core.zookeeper.AttachLeaderSelectorListener">
        <constructor-arg index="0" ref="zookeeperLeaderListener"/>
        <constructor-arg index="1" value="${zookeeper.leader.path}"/>
    </bean>

    <bean id="zookeeperClient" class="org.cad.interruptus.core.ZookeeperFactoryBean" lazy-init="false">
        <property name="connection" value="${zookeeper.connection}"/>
        <property name="lifecycleListeners">
            <list>
                <ref bean="attachPathListener"/>
                <ref bean="attachLeaderSelectorListener"/>
            </list>
        </property>
    </bean>

    <!-- esper configuration -->
    <bean id="flowConfiguration" class="org.cad.interruptus.core.esper.FlowConfiguration">
        <constructor-arg index="0" ref="esperDefaultProvider"/>
        <constructor-arg index="1" ref="esperDefaultProviderAdministrator"/>
    </bean>
    
    <bean id="statementConfiguration" class="org.cad.interruptus.core.esper.StatementConfiguration">
        <constructor-arg index="0" ref="esperDefaultProviderAdministrator"/>
    </bean>
    
    <bean id="typeConfiguration" class="org.cad.interruptus.core.esper.TypeConfiguration">
        <constructor-arg index="0" ref="esperDefaultProvider"/>
    </bean>

    <!-- Entity cache -->
    <bean id="typeEntityCache" class="org.cad.interruptus.core.CacheFactoryBean" />
    <bean id="flowEntityCache" class="org.cad.interruptus.core.CacheFactoryBean" />
    <bean id="statementEntityCache" class="org.cad.interruptus.core.CacheFactoryBean" />

    <!-- Repository -->
    <bean id="typeRepositoryZookeeper" class="org.cad.interruptus.repository.zookeeper.TypeRepositoryZookeeper">
        <constructor-arg index="0" ref="zookeeperClient"/>
        <constructor-arg index="1" ref="typeEntityCache"/>
        <constructor-arg index="2" ref="gson"/>
        <constructor-arg index="3" value="${zookeeper.configuration.type.path}"/>
    </bean>

    <bean id="flowRepositoryZookeeper" class="org.cad.interruptus.repository.zookeeper.FlowRepositoryZookeeper">
        <constructor-arg index="0" ref="zookeeperClient"/>
        <constructor-arg index="1" ref="flowEntityCache"/>
        <constructor-arg index="2" ref="gson"/>
        <constructor-arg index="3" value="${zookeeper.configuration.flow.path}"/>
    </bean>

    <bean id="statementRepositoryZookeeper" class="org.cad.interruptus.repository.zookeeper.StatementRepositoryZookeeper">
        <constructor-arg index="0" ref="zookeeperClient"/>
        <constructor-arg index="1" ref="statementEntityCache"/>
        <constructor-arg index="2" ref="gson"/>
        <constructor-arg index="3" value="${zookeeper.configuration.statement.path}"/>
    </bean>

    
</beans>
