<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:component-scan base-package="org.cad.interruptus.rest" />
    <context:component-scan base-package="org.cad.interruptus.core.esper" />

    <context:property-placeholder location="classpath:configuration.properties" />

    <bean id="gsonBuilder" class="com.google.gson.GsonBuilder">
        <property name="dateFormat" value="yyyy-MM-dd HH:mm:ss"/>
    </bean>

    <bean id="isLeaderReference" class="java.util.concurrent.atomic.AtomicBoolean"/>

    <bean id="configReference" class="java.util.concurrent.atomic.AtomicReference"/>

    <bean id="gson" class="com.google.gson.Gson" factory-bean="gsonBuilder" factory-method="create"/>

    <bean id="esperDefaultProvider" class="org.cad.interruptus.core.EsperServiceProviderFactoryBean" lazy-init="false"/>

    <bean id="esperDefaultProviderAdministrator"
          class="com.espertech.esper.client.EPAdministrator"
          factory-bean="esperDefaultProvider"
          factory-method="getEPAdministrator"/>

    <bean id="esperepEPRuntimeImpl"
          class="com.espertech.esper.core.service.EPRuntimeImpl"
          factory-bean="esperDefaultProvider"
          factory-method="getEPRuntime"/>

    <bean id="esperConfigurationOperations"
          class="com.espertech.esper.client.ConfigurationOperations"
          factory-bean="esperDefaultProviderAdministrator"
          factory-method="getConfiguration"/>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean" lazy-init="false" scope="singleton">
        <property name="staticMethod"   value="org.cad.interruptus.AMQPJsonToMap.setMessageCollectorService"/>
        <property name="arguments"      ref="messageCollectorService"/>
    </bean>

    <bean id="inventoryExecutorService" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod"   value="java.util.concurrent.Executors.newScheduledThreadPool"/>
        <property name="arguments"      value="1"/>
    </bean>

    <util:map id="entityConfigurationListenerMap">
        <entry key="type">
            <set>
                <bean class="org.cad.interruptus.repository.zookeeper.listener.TypeConfigurationListener">
                    <constructor-arg index="0" ref="typeConfiguration" />
                    <constructor-arg index="1" ref="isLeaderReference" />
                </bean>
            </set>
        </entry>
        <entry key="flow">
            <set>
                <bean class="org.cad.interruptus.repository.zookeeper.listener.FlowConfigurationListener">
                    <constructor-arg index="0" ref="flowConfiguration" />
                    <constructor-arg index="1" ref="isLeaderReference" />
                </bean>
            </set>
        </entry>
        <entry key="statement">
            <set>
                <bean class="org.cad.interruptus.repository.zookeeper.listener.StatementConfigurationListener">
                    <constructor-arg index="0" ref="statementConfiguration" />
                    <constructor-arg index="1" ref="isLeaderReference" />
                </bean>
            </set>
        </entry>
    </util:map>
    
    <bean id="configurationEventDispatcher" class="org.cad.interruptus.repository.zookeeper.listener.ConfigurationEventDispatcher">
        <constructor-arg ref="entityConfigurationListenerMap" />
    </bean>

    <!-- zookeeper configuration -->
    <bean id="configurationZookeeperListener" class="org.cad.interruptus.repository.zookeeper.listener.ConfigurationZookeeperListener">
        <constructor-arg index="0" ref="configReference" />
        <constructor-arg index="1" ref="configurationEventDispatcher" />
        <constructor-arg index="2" ref="gson" />
    </bean>

    <bean id="zookeeperLeaderListener" class="org.cad.interruptus.core.zookeeper.ZookeeperLeaderListener">
        <constructor-arg index="0" ref="isLeaderReference"/>
        <constructor-arg index="1" ref="flowConfiguration"/>
        <constructor-arg index="2" ref="statementConfiguration"/>
    </bean>

    <bean id="attachLeaderSelectorListener" class="org.cad.interruptus.core.zookeeper.AttachLeaderSelectorListener">
        <constructor-arg index="0" ref="zookeeperLeaderListener"/>
        <constructor-arg index="1" value="${zookeeper.leader.path}"/>
    </bean>

    <bean id="attachConfigurationListener" class="org.cad.interruptus.core.zookeeper.AttachConfigurationListener">
        <constructor-arg>
            <map>
                <entry key="${zookeeper.configuration.path}">
                    <set>
                        <ref bean="configurationZookeeperListener" />
                    </set>
                </entry>
            </map>
        </constructor-arg>
    </bean>

    <bean id="zookeeperClient" class="org.cad.interruptus.core.ZookeeperFactoryBean" lazy-init="false">
        <property name="connection" value="${zookeeper.connection}"/>
        <property name="lifecycleListeners">
            <list>
                <ref bean="attachConfigurationListener"/>
                <ref bean="attachLeaderSelectorListener"/>
            </list>
        </property>
    </bean>

    <!-- esper configuration -->
    <bean id="flowConfiguration" class="org.cad.interruptus.core.esper.FlowConfiguration">
        <constructor-arg index="0" ref="esperDefaultProvider"/>
        <constructor-arg index="1" ref="esperDefaultProviderAdministrator"/>
    </bean>
    
    <bean id="statementConfiguration" class="org.cad.interruptus.core.esper.StatementConfiguration">
        <constructor-arg index="0" ref="esperDefaultProviderAdministrator"/>
    </bean>
    
    <bean id="typeConfiguration" class="org.cad.interruptus.core.esper.TypeConfiguration">
        <constructor-arg index="0" ref="esperDefaultProvider"/>
    </bean>

    <!-- Configuration -->
    <bean id="configurationManager" class="org.cad.interruptus.repository.zookeeper.ConfigurationManager">
        <constructor-arg index="0" ref="zookeeperClient"/>
        <constructor-arg index="1" ref="configReference"/>
        <constructor-arg index="2" ref="gson"/>
        <constructor-arg index="3" value="${zookeeper.configuration.path}"/>
    </bean>

    <!-- Repository -->
    <bean id="typeConfigurationRepository" class="org.cad.interruptus.repository.zookeeper.TypeConfigurationRepository">
        <constructor-arg index="0" ref="configurationManager"/>
    </bean>

    <bean id="flowConfigurationRepository" class="org.cad.interruptus.repository.zookeeper.FlowConfigurationRepository">
        <constructor-arg index="0" ref="configurationManager"/>
    </bean>

    <bean id="statementConfigurationRepository" class="org.cad.interruptus.repository.zookeeper.StatementConfigurationRepository">
        <constructor-arg index="0" ref="configurationManager"/>
    </bean>

    <!-- Services -->
    <bean id="messageCollectorService" class="org.cad.interruptus.service.MessageCollectorService">
        <constructor-arg index="0" ref="esperConfigurationOperations"/>
        <constructor-arg index="1" ref="messageService"/>
        <constructor-arg index="2" ref="inventoryService"/>
    </bean>

    <bean id="inventoryService" class="org.cad.interruptus.service.InventoryService" init-method="start" destroy-method="stop">
        <constructor-arg index="0" ref="typeConfigurationRepository"/>
        <constructor-arg index="1" ref="zookeeperClient"/>
        <constructor-arg index="2" ref="inventoryExecutorService"/>
        <constructor-arg index="3" ref="isLeaderReference"/>
        <constructor-arg index="4" value="${zookeeper.inventory.path}"/>

        <property name="interval" value="${inventory.interval}"/>
    </bean>

    <bean id="messageService" class="org.cad.interruptus.service.MessageService">
        <constructor-arg ref="gson"/>
    </bean>
</beans>
