{
  "apiVersion" : "v1",
  "swaggerVersion" : "1.2",
  "basePath" : "http://localhost:8080/api",
  "resourcePath" : "/flow",
  "produces" : [ "application/json" ],
  "consumes" : [ "application/json" ],
  "apis" : [ {
    "path" : "/flow/{name}/state",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Retrives the state for a flow",
      "notes" : "Retrives the state for a flow, throws exception if does not exists",
      "type" : "Flow",
      "nickname" : "state",
      "authorizations" : { },
      "parameters" : [ {
        "name" : "name",
        "description" : "Flow name to lookup for",
        "required" : true,
        "type" : "string",
        "paramType" : "path"
      } ],
      "responseMessages" : [ {
        "code" : 404,
        "message" : "Flow doesn't exists"
      } ]
    } ]
  }, {
    "path" : "/flow",
    "operations" : [ {
      "method" : "GET",
      "summary" : "List all flows",
      "notes" : "List all flows, whether is runnig or not",
      "type" : "array",
      "items" : {
        "$ref" : "Flow"
      },
      "nickname" : "listFlows",
      "authorizations" : { },
      "parameters" : [ ]
    }, {
      "method" : "POST",
      "summary" : "Save a flow configuration",
      "notes" : "Save a flow configuration, if the flow already exists will be overwritten",
      "type" : "boolean",
      "nickname" : "saveFlow",
      "authorizations" : { },
      "parameters" : [ {
        "name" : "body",
        "required" : false,
        "type" : "Flow",
        "paramType" : "body"
      } ]
    } ]
  }, {
    "path" : "/flow/{name}",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Retreives a flow configuration",
      "notes" : "Retreives a flow configuration, throws exception if does not exists",
      "type" : "Flow",
      "nickname" : "showFlow",
      "authorizations" : { },
      "parameters" : [ {
        "name" : "name",
        "description" : "Flow name to lookup for",
        "required" : true,
        "type" : "string",
        "paramType" : "path"
      } ],
      "responseMessages" : [ {
        "code" : 404,
        "message" : "Flow doesn't exists"
      } ]
    }, {
      "method" : "DELETE",
      "summary" : "Removes a flow configuration",
      "notes" : "Removes a flow configuration, throws exception if does not exists",
      "type" : "Flow",
      "nickname" : "removeFlow",
      "authorizations" : { },
      "parameters" : [ {
        "name" : "name",
        "description" : "Flow name to lookup for",
        "required" : true,
        "type" : "string",
        "paramType" : "path"
      } ],
      "responseMessages" : [ {
        "code" : 404,
        "message" : "Flow doesn't exists"
      } ]
    } ]
  }, {
    "path" : "/flow/{name}/start",
    "operations" : [ {
      "method" : "POST",
      "summary" : "Start a flow in esper",
      "notes" : "Stop a existing in esper, throws exception if does not exists",
      "type" : "Flow",
      "nickname" : "startFlow",
      "authorizations" : { },
      "parameters" : [ {
        "name" : "name",
        "description" : "Flow name to lookup for",
        "required" : true,
        "type" : "string",
        "paramType" : "path"
      } ],
      "responseMessages" : [ {
        "code" : 404,
        "message" : "Flow doesn't exists"
      } ]
    } ]
  }, {
    "path" : "/flow/{name}/stop",
    "operations" : [ {
      "method" : "POST",
      "summary" : "Stop a flow in esper",
      "notes" : "Stop a existing flow in esper, throws exception if does not exists",
      "type" : "Flow",
      "nickname" : "stopFlow",
      "authorizations" : { },
      "parameters" : [ {
        "name" : "name",
        "description" : "Flow name to lookup for",
        "required" : true,
        "type" : "string",
        "paramType" : "path"
      } ],
      "responseMessages" : [ {
        "code" : 404,
        "message" : "Flow doesn't exists"
      } ]
    } ]
  } ],
  "models" : {
    "Flow" : {
      "id" : "Flow",
      "description" : "Flow resource representation",
      "required" : [ "name", "query" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Flow unique name"
        },
        "query" : {
          "type" : "string",
          "description" : "Flow epl query"
        },
        "started" : {
          "type" : "boolean",
          "description" : "Whether or not the flow is running in esper"
        },
        "running" : {
          "type" : "boolean"
        },
        "masterOnly" : {
          "type" : "boolean",
          "description" : "Flow runs only on master node or not"
        }
      }
    }
  }
}